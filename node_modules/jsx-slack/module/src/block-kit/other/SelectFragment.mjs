import{JSXSlackError as f}from"../../error.mjs";import{JSXSlack as u}from"../../jsx.mjs";import{createComponent as x}from"../../jsx-internals.mjs";import{Optgroup as l}from"../composition/Optgroup.mjs";import{Option as g,optionSelectedSymbol as S}from"../composition/Option.mjs";import{alias as $,resolveTagName as b}from"../utils.mjs";const y=Symbol("jsx-slack-select-fragment-selected-options"),O=x("SelectFragment",({children:k,from:a})=>{let s=0,o;const m=`<${(a==null?void 0:a.$$jsxslackComponent.name)||"SelectFragment"}>`,p=[],c=u.Children.toArray(k).reduce((i,t)=>{if(!u.isValidElement(t))return i;let e=t;t.$$jsxslack.type==="option"&&(e=$(t,g,!1)),t.$$jsxslack.type==="optgroup"&&(e=$(t,l,!1));const{type:n}=e.$$jsxslack;if(n===g)s+=1,e[S]&&p.push(e);else if(n===l)s+=e.options.length,p.push(...e.options.filter(r=>r[S]));else{const r=b(t);throw new f(`${m} must contain either of <Option> or <Optgroup>${r?` but it is included ${r}`:""}.`,t)}if(o&&o!==n)throw new f(`<Option> and <Optgroup> cannot be mixed in the immediate children of ${m}.`,t);return o=n,[...i,e]},[]);return s>0?Object.defineProperty(o===l?{option_groups:c}:{options:c},y,{value:p}):{options:[]}}),d=O;export{d as SelectFragment,O as SelectFragmentInternal,y as selectFragmentSelectedOptionsSymbol};
