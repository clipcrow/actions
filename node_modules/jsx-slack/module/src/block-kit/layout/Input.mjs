import{JSXSlackError as a}from"../../error.mjs";import{createComponent as h,cleanMeta as i,createElementInternal as o}from"../../jsx-internals.mjs";import{coerceToInteger as l}from"../../utils.mjs";import{inputDispatchActionConfig as _,plainText as u}from"../composition/utils.mjs";import{PlainTextInput as f}from"../elements/PlainTextInput.mjs";import{focusOnLoadFromProps as v}from"../elements/utils.mjs";import{resolveTagName as b}from"../utils.mjs";const d=["channels_select","checkboxes","conversations_select","datepicker","external_select","multi_channels_select","multi_conversations_select","multi_external_select","multi_static_select","multi_users_select","plain_text_input","radio_buttons","static_select","timepicker","users_select"],I=({element:t,from:e})=>{if(typeof t!="object")throw new a(`${e} has invalid value as an element of input layout block.`);if(!d.includes(t.type)){const n=b(t);throw new a(`${e} has detected an invalid type as the element of input layout block: "${t.type}"${n?` (Provided by ${n})`:""}`,t)}return i(t)},r=(t,e,n)=>{const s=i(o(I,{element:t,from:n?`<${n.$$jsxslackComponent.name}>`:"Input layout block"}));if(e.label){const c=e.hint||e.title;return{type:"input",block_id:e.blockId||e.id,label:u(e.label),hint:c?u(c):void 0,optional:!e.required,dispatch_action:e.dispatchAction!==void 0?!!e.dispatchAction:void 0,element:s}}return t},m=h("Input",t=>t.type==="hidden"||t.type==="submit"?{}:r(t.children||i(o(f,{actionId:t.actionId||t.name,initialValue:t.value,maxLength:l(t.maxLength),minLength:l(t.minLength),placeholder:t.placeholder,dispatchActionConfig:_(t),focusOnLoad:v(t)})),{...t,dispatchAction:t.dispatchAction===void 0?void 0:!!t.dispatchAction},m));export{m as Input,d as knownInputs,r as wrapInInput};
