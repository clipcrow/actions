import{JSXSlackError as g}from"../../error.mjs";import{JSXSlack as c}from"../../jsx.mjs";import{createComponent as h}from"../../jsx-internals.mjs";import{mrkdwn as p}from"../composition/Mrkdwn.mjs";import{assignMetaFrom as l}from"../utils.mjs";const m=Symbol("EndOfContext"),y=h("Context",({blockId:f,children:u,id:x,...d})=>{const n=[];let r=[];for(const t of[...c.Children.toArray(u),m]){const o=(()=>{if(c.isValidElement(t)){if(t.$$jsxslack.type==="span")return l(t,p(t));if(t.$$jsxslack.type==="img"){const{src:e,alt:i}=t.$$jsxslack.props||{};return l(t,{type:"image",image_url:e,alt_text:i})}if(typeof t=="object"){const{type:e,text:i,image_url:s,alt_text:a}=t;if(e==="mrkdwn"&&i)return t;if(e==="image"&&s&&a)return l(t,{type:"image",image_url:s,alt_text:a})}}return null})();if(r.length>0&&(o||t===m)){const e=p(r);e.text&&n.push(e),r=[]}o?n.push(o):t!==m&&r.push(t)}if(n.length>10)throw new g(`<Context> allows containing up to 10 elements, but the number of generated elements is ${n.length}.`,d.__source);return{type:"context",block_id:f||x,elements:n}});export{y as Context};
