import{JSXSlackError as s}from"../../error.mjs";import{JSXSlack as p}from"../../jsx.mjs";import{createComponent as h}from"../../jsx-internals.mjs";import{Button as w}from"../elements/Button.mjs";import{Select as v}from"../elements/Select.mjs";import{alias as m,resolveTagName as u}from"../utils.mjs";import{generateInputValidator as y}from"./utils.mjs";const r=e=>{const n=u(e);throw new s(`<Actions> cannot include the element for selection from multiple options${n?`: <${n.slice(1,-1)} multiple>`:"."}`,e)},_=["button","channels_select","checkboxes","conversations_select","datepicker","external_select","overflow","radio_buttons","static_select","timepicker","users_select"],d={..._.reduce((e,n)=>({...e,[n]:()=>{}}),{}),channels_select:e=>{if(e.response_url_enabled)throw new s("<ChannelsSelect responseUrlEnabled> is available only in the usage of input components.",e)},conversations_select:e=>{if(e.response_url_enabled)throw new s("<ConversationsSelect responseUrlEnabled> is available only in the usage of input components.",e)},multi_channels_select:r,multi_conversations_select:r,multi_external_select:r,multi_static_select:r,multi_users_select:r,input:y("Actions")},g=h("Actions",({blockId:e,children:n,id:f,...b})=>{const l=p.Children.toArray(n).reduce((i,t)=>{let o=t;if(p.isValidElement(t)&&(t.$$jsxslack.type==="button"&&(o=m(t,w)),t.$$jsxslack.type==="select"&&(o=m(t,v))),typeof o=="object"){const a=d[o.type];if(!a){const c=u(t);throw new s(`<Actions> has detected an incompatible element in its children${c?`: ${c}`:"."}`,t)}return a(o),[...i,o]}return i},[]);if(l.length>25)throw new s(`<Actions> can contain up to 25 elements, but there are ${l.length} elements.`,b.__source);return{type:"actions",block_id:e||f,elements:l}});export{g as Actions,_ as availableActionTypes};
