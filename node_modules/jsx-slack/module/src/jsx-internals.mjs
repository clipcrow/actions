const{defineProperty:a,create:p,keys:d,freeze:m}=Object,r="$$jsxslack",i=r+"Component",u=(e,o=null,...l)=>{let t=p(null);if(typeof e=="function"){let n={...o||{}},{length:c}=l;c===1?[n.children]=l:c>1&&(n.children=l),t=e(n)}if(t&&typeof t=="object"){for(let n of d(t))t[n]===void 0&&delete t[n];if(!t[r]){let n=l;if(!l.length){let{children:c}=o||{};c!==void 0&&(n=[].concat(c))}a(t,r,{value:{type:e,props:o,children:n}})}}return t},s=(e,o,l={})=>a(o,i,{value:m(a({...l},"name",{value:e,enumerable:!0}))}),j=s("Fragment",({children:e})=>[].concat(e)),f=e=>typeof e=="function"&&!!Object.prototype.hasOwnProperty.call(e,i),y=e=>typeof e=="object"&&!!e&&!!Object.prototype.hasOwnProperty.call(e,r),C=(e,o)=>y(e)&&f(e[r].type)&&(!o||e[r].type===o),b=e=>Array.isArray(e)?[...e]:{...e};export{j as FragmentInternal,b as cleanMeta,s as createComponent,u as createElementInternal,f as isValidComponent,C as isValidElementFromComponent,y as isValidElementInternal};
